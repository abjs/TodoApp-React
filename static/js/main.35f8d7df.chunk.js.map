{"version":3,"sources":["Todo.js","TodoList.js","Main.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","name","type","checked","completed","onChange","id","TodoList","todos","map","Main","Local_Storage_KEY","App","useState","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","numberOfTodo","filter","length","ref","onClick","e","current","value","uuidv4","newTodo","find","ReactDOM","render","document","getElementById"],"mappings":"oJAEe,SAASA,EAAT,GAAqC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAIjC,OACI,8BACI,gCAEE,oCAAOD,EAAKE,KACZ,uBAAOC,KAAK,WAAWC,QAASJ,EAAKK,UAAWC,SAR9B,WACxBL,EAAWD,EAAKO,cCFT,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOR,EAAc,EAAdA,WACtC,OAAQQ,EAAMC,KAAI,SAAAV,GACd,OAAO,cAACD,EAAD,CAAoBC,KAAMA,EAAMC,WAAYA,GAAjCD,EAAKO,OCFhB,SAASI,IACpB,OACI,gCACI,iEACA,0B,YCFNC,EAAoB,gBACX,SAASC,IAAO,IAAD,EACAC,mBAAS,IADT,mBACnBL,EADmB,KACZM,EADY,KAEpBC,EAAcC,mBAepBC,qBAAU,WACN,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IAChDO,GACAJ,EAASI,KAEd,IACHD,qBAAU,WACNI,aAAaE,QAAQZ,EAAmBQ,KAAKK,UAAUhB,MACxD,CAACA,IAEJ,IAWMiB,EAAejB,EAAMkB,QAAO,SAAA3B,GAAI,OAAKA,EAAKK,aAAWuB,OAE3D,OACI,qCACI,cAACjB,EAAD,IACA,uBAAOkB,IAAKb,EAAab,KAAK,SAC9B,wBAAQ2B,QAzCA,SAACC,GACb,IAAM7B,EAAOc,EAAYgB,QAAQC,MACpB,KAAT/B,IACAc,EAAYgB,QAAQC,MAAQ,KAC5BlB,GAAS,SAAAgB,GACL,MAAM,GAAN,mBAAWA,GAAX,CAAc,CACVxB,GAAI2B,cACJhC,KAAMA,EACNG,WAAW,UAiCnB,sBACA,uBACA,uBACA,cAACG,EAAD,CAAUC,MAAOA,EAAOR,WApBb,SAACM,GAChB,IAAM4B,EAAO,YAAO1B,GACdT,EAAOmC,EAAQC,MAAK,SAAApC,GAAI,OAAIA,EAAKO,KAAOA,KAC9CP,EAAKK,WAAaL,EAAKK,UACvBU,EAASoB,MAiBL,wBAAQL,QAfY,WACxB,IAAMK,EAAU1B,EAAMkB,QAAO,SAAA3B,GAAI,OAAKA,EAAKK,aAC3CU,EAASoB,IAaL,6BACA,2CAAcT,EAAd,8BCnDZW,IAASC,OAAQ,cAACzB,EAAD,IAAQ0B,SAASC,eAAe,W","file":"static/js/main.35f8d7df.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Todo({ todo, toggleTodo }) {\n    const handleTodoCompleted = () => {\n        toggleTodo(todo.id)\n    }\n    return (\n        <div>\n            <label>\n                \n              <h2>  {todo.name}\n              <input type=\"checkbox\" checked={todo.completed} onChange={handleTodoCompleted} />\n              </h2>\n            </label>\n        </div>\n    )\n}\n","import React from 'react'\nimport Todo from './Todo'\nexport default function TodoList({ todos, toggleTodo }) {\n    return (todos.map(todo => {\n        return <Todo key={todo.id} todo={todo} toggleTodo={toggleTodo} />\n    }))\n\n}\n","import React from 'react'\n\nexport default function Main() {\n    return (\n        <div>\n            <h1> Todo Application Using React  </h1>\n            <br/>\n        </div>\n    )\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport TodoList from './TodoList'\nimport Main from './Main'\nimport { v4 as uuidv4 } from 'uuid';\nconst Local_Storage_KEY = 'todoApp.todos'\nexport default function App() {\n    const [todos, setTodos] = useState([]) // {id:1,name:'Todo 1',completed:true}\n    const todoNameRef = useRef()\n    const AddTodo = (e) => {\n        const name = todoNameRef.current.value\n        if (name !== '') {\n            todoNameRef.current.value = null\n            setTodos(e => {\n                return [...e, {\n                    id: uuidv4(),\n                    name: name,\n                    completed: false\n                }\n                ]\n            })\n        }\n    }\n    useEffect(() => {\n        const storedTodos = JSON.parse(localStorage.getItem(Local_Storage_KEY))\n        if (storedTodos)\n            setTodos(storedTodos)\n\n    }, [])\n    useEffect(() => {\n        localStorage.setItem(Local_Storage_KEY, JSON.stringify(todos))\n    }, [todos])\n\n    const toggleTodo = (id) => {\n        const newTodo = [...todos]\n        const todo = newTodo.find(todo => todo.id === id)\n        todo.completed = !todo.completed\n        setTodos(newTodo)\n    }\n    const RemoveComplitedTodo = () => {\n        const newTodo = todos.filter(todo => !todo.completed)\n        setTodos(newTodo)\n    }\n\n    const numberOfTodo = todos.filter(todo => !todo.completed).length\n\n    return (\n        <>\n            <Main />\n            <input ref={todoNameRef} type=\"text\" />\n            <button onClick={AddTodo}>Add Todo</button>\n            <br />\n            <br />\n            <TodoList todos={todos} toggleTodo={toggleTodo} />\n            <button onClick={RemoveComplitedTodo}>Clear Completed</button>\n            <h3>You have {numberOfTodo} this remining to do </h3>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render (<App/>, document.getElementById('root'));\n"],"sourceRoot":""}