{"version":3,"sources":["Todo.js","TodoList.js","Main.js","NavBar.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","name","type","checked","completed","onChange","id","TodoList","todos","map","Main","NavBar","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","Local_Storage_KEY","App","useState","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","numberOfTodo","filter","length","ref","onClick","e","current","value","uuidv4","newTodo","find","routing","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"sKAEe,SAASA,EAAT,GAAqC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAIjC,OACI,8BACI,gCAEE,oCAAOD,EAAKE,KACZ,uBAAOC,KAAK,WAAWC,QAASJ,EAAKK,UAAWC,SAR9B,WACxBL,EAAWD,EAAKO,cCFT,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOR,EAAc,EAAdA,WACtC,OAAQQ,EAAMC,KAAI,SAAAV,GACd,OAAO,cAACD,EAAD,CAAoBC,KAAMA,EAAMC,WAAYA,GAAjCD,EAAKO,OCFhB,SAASI,IACpB,OACI,gCACI,iEACA,0B,oBCHG,SAASC,IACpB,OACI,mCACI,eAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,OAAvD,UACI,cAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,QAAnB,yCACA,cAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAC7B,cAACR,EAAA,EAAOS,SAAR,CAAiBf,GAAG,wBAApB,SACI,eAACgB,EAAA,EAAD,CAAKC,UAAU,UAAf,UACI,cAACD,EAAA,EAAIE,KAAL,CAAUN,KAAK,yCAAf,sBACA,cAACI,EAAA,EAAIE,KAAL,CAAUN,KAAK,iCAAf,uBACA,cAACI,EAAA,EAAIE,KAAL,CAAUN,KAAK,gCAAf,qBACA,cAACI,EAAA,EAAIE,KAAL,CAAUN,KAAK,2DAAf,qBACA,cAACI,EAAA,EAAIE,KAAL,CAAUN,KAAK,0BAAf,oBACA,cAACI,EAAA,EAAIE,KAAL,CAAUN,KAAK,sBAAf,2B,YCXlBO,EAAoB,gBACX,SAASC,IAAO,IAAD,EACAC,mBAAS,IADT,mBACnBnB,EADmB,KACZoB,EADY,KAEpBC,EAAcC,mBAepBC,qBAAU,WACN,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IAChDO,GACAJ,EAASI,KAEd,IACHD,qBAAU,WACNI,aAAaE,QAAQZ,EAAmBQ,KAAKK,UAAU9B,MACxD,CAACA,IAEJ,IAWM+B,EAAe/B,EAAMgC,QAAO,SAAAzC,GAAI,OAAKA,EAAKK,aAAWqC,OAE3D,OACI,qCACH,cAAC9B,EAAD,IAEO,cAACD,EAAD,IACA,uBAAOgC,IAAKb,EAAa3B,KAAK,SAC9B,wBAAQyC,QA3CA,SAACC,GACb,IAAM3C,EAAO4B,EAAYgB,QAAQC,MACpB,KAAT7C,IACA4B,EAAYgB,QAAQC,MAAQ,KAC5BlB,GAAS,SAAAgB,GACL,MAAM,GAAN,mBAAWA,GAAX,CAAc,CACVtC,GAAIyC,cACJ9C,KAAMA,EACNG,WAAW,UAmCnB,sBACA,uBACA,uBACA,cAACG,EAAD,CAAUC,MAAOA,EAAOR,WAtBb,SAACM,GAChB,IAAM0C,EAAO,YAAOxC,GACdT,EAAOiD,EAAQC,MAAK,SAAAlD,GAAI,OAAIA,EAAKO,KAAOA,KAC9CP,EAAKK,WAAaL,EAAKK,UACvBwB,EAASoB,MAmBL,wBAAQL,QAjBY,WACxB,IAAMK,EAAUxC,EAAMgC,QAAO,SAAAzC,GAAI,OAAKA,EAAKK,aAC3CwB,EAASoB,IAeL,6BACA,2CAAcT,EAAd,8BClDZ,IAAMW,EACF,cAAC,IAAD,UAEI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAY3B,IAClC,cAAC,IAAD,CAAO0B,KAAK,KAAKC,UAAY3B,IAC7B,cAAC,IAAD,CAAO0B,KAAK,KAAKC,UAAY3B,SAOzC4B,IAASC,OAILL,EACAM,SAASC,eAAe,W","file":"static/js/main.235a147b.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Todo({ todo, toggleTodo }) {\n    const handleTodoCompleted = () => {\n        toggleTodo(todo.id)\n    }\n    return (\n        <div>\n            <label>\n                \n              <h2>  {todo.name}\n              <input type=\"checkbox\" checked={todo.completed} onChange={handleTodoCompleted} />\n              </h2>\n            </label>\n        </div>\n    )\n}\n","import React from 'react'\nimport Todo from './Todo'\nexport default function TodoList({ todos, toggleTodo }) {\n    return (todos.map(todo => {\n        return <Todo key={todo.id} todo={todo} toggleTodo={toggleTodo} />\n    }))\n\n}\n","import React from 'react'\n\nexport default function Main() {\n    return (\n        <div>\n            <h1> Todo Application Using React  </h1>\n            <br/>\n        </div>\n    )\n}\n","import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nexport default function NavBar() {\n    return (\n        <>\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">Todo Application with React</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"https://www.facebook.com/itsmeabjs.me/\">Facebook</Nav.Link>\n                        <Nav.Link href=\"https://www.instagram.com/abjs\">Instagram</Nav.Link>\n                        <Nav.Link href=\"https://twitter.com/itsmeabjs\">Twitter</Nav.Link>\n                        <Nav.Link href=\"https://www.youtube.com/channel/UCt8GRf1R6LeTmC3xNlc0lHw\">Youtube</Nav.Link>\n                        <Nav.Link href=\"https://github.com/abjs\">Github</Nav.Link>\n                        <Nav.Link href=\"https://dev.to/abjs\">DEV</Nav.Link>\n\n                    </Nav>\n\n                </Navbar.Collapse>\n            </Navbar>\n        </>\n    )\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport TodoList from './TodoList'\nimport Main from './Main'\nimport NavBar from './NavBar';\nimport { v4 as uuidv4 } from 'uuid';\nconst Local_Storage_KEY = 'todoApp.todos'\nexport default function App() {\n    const [todos, setTodos] = useState([]) // {id:1,name:'Todo 1',completed:true}\n    const todoNameRef = useRef()\n    const AddTodo = (e) => {\n        const name = todoNameRef.current.value\n        if (name !== '') {\n            todoNameRef.current.value = null\n            setTodos(e => {\n                return [...e, {\n                    id: uuidv4(),\n                    name: name,\n                    completed: false\n                }\n                ]\n            })\n        }\n    }\n    useEffect(() => {\n        const storedTodos = JSON.parse(localStorage.getItem(Local_Storage_KEY))\n        if (storedTodos)\n            setTodos(storedTodos)\n\n    }, [])\n    useEffect(() => {\n        localStorage.setItem(Local_Storage_KEY, JSON.stringify(todos))\n    }, [todos])\n\n    const toggleTodo = (id) => {\n        const newTodo = [...todos]\n        const todo = newTodo.find(todo => todo.id === id)\n        todo.completed = !todo.completed\n        setTodos(newTodo)\n    }\n    const RemoveComplitedTodo = () => {\n        const newTodo = todos.filter(todo => !todo.completed)\n        setTodos(newTodo)\n    }\n\n    const numberOfTodo = todos.filter(todo => !todo.completed).length\n\n    return (\n        <>\n     <NavBar />\n\n            <Main />\n            <input ref={todoNameRef} type=\"text\" />\n            <button onClick={AddTodo}>Add Todo</button>\n            <br />\n            <br />\n            <TodoList todos={todos} toggleTodo={toggleTodo} />\n            <button onClick={RemoveComplitedTodo}>Clear Completed</button>\n            <h3>You have {numberOfTodo} this remining to do </h3>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Route, Switch, HashRouter as Router} from 'react-router-dom'\nimport App from './App';\n\n//BrowserRouter\n// import reportWebVitals from './reportWebVitals';\nconst routing = (\n    <Router>\n \n        <Switch>\n            <Route exact path=\"/\" component ={App}/>\n            <Route path=\"/1\" component ={App}/>\n            <Route path=\"/2\" component ={App}/>\n        </Switch>\n\n    </Router>\n)\n\n\nReactDOM.render(\n    // <React.StrictMode>\n    // <NavBar />\n    // </React.StrictMode>,\n    routing,\n    document.getElementById('root')\n);\n\n\n// ReactDOM.render (<App/>, document.getElementById('root'));\n"],"sourceRoot":""}