{"version":3,"sources":["Todo.js","TodoList.js","Main.js","NavBar.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","num","Card","style","width","Header","number","ListGroup","variant","Item","name","type","checked","completed","onChange","id","TodoList","todos","map","Main","className","NavBar","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","Local_Storage_KEY","App","useState","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","numberOfTodo","filter","length","Container","fluid","Row","Col","ref","Button","onClick","e","current","value","uuidv4","newTodo","find","toLowerCase","text","Body","Title","routing","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.423ee13f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nexport default function Todo({ todo,num, toggleTodo }) {\r\n  const handleTodoCompleted = () => {\r\n    toggleTodo(todo.id);\r\n  };\r\n  return (\r\n    <div>\r\n      <Card style={{ width: \"18rem\" }}>\r\n        <label>\r\n          <h1>\r\n            <Card.Header>Task {todo.number} </Card.Header>\r\n          </h1>\r\n\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                {todo.name + \"      \"}\r\n\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  onChange={handleTodoCompleted}\r\n                />\r\n                {\"     \"}\r\n              </h2>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </label>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\nexport default function TodoList({ todos, number, toggleTodo }) {\r\n    return (todos.map(todo => {\r\n        return <Todo key={todo.id} todo={todo} num={number} toggleTodo={toggleTodo} />\r\n    }))\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Main() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"d-flex justify-content-center\"> Todo Application Using React  </h1>\r\n            <br/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nexport default function NavBar() {\r\n    return (\r\n        <>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"#home\">Todo Application with React</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"https://www.facebook.com/itsmeabjs.me/\">Facebook</Nav.Link>\r\n                        <Nav.Link href=\"https://www.instagram.com/abjs\">Instagram</Nav.Link>\r\n                        <Nav.Link href=\"https://twitter.com/itsmeabjs\">Twitter</Nav.Link>\r\n                        <Nav.Link href=\"https://www.youtube.com/channel/UCt8GRf1R6LeTmC3xNlc0lHw\">Youtube</Nav.Link>\r\n                        <Nav.Link href=\"https://github.com/abjs\">Github</Nav.Link>\r\n                        <Nav.Link href=\"https://dev.to/abjs\">DEV</Nav.Link>\r\n\r\n                    </Nav>\r\n\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport TodoList from \"./TodoList\";\r\nimport Main from \"./Main\";\r\nimport NavBar from \"./NavBar\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\n// import ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nconst Local_Storage_KEY = \"todoApp.todos\";\r\nexport default function App() {\r\n  const [todos, setTodos] = useState([]); // {id:1,name:'Todo 1',completed:true}\r\n  const todoNameRef = useRef();\r\n  const AddTodo = (e) => {\r\n    const name = todoNameRef.current.value;\r\n    if (name !== \"\") {\r\n      todoNameRef.current.value = null;\r\n      setTodos((e) => {\r\n        return [\r\n          ...e,\r\n          {\r\n            id: uuidv4(),\r\n            name: name,\r\n            number: todos.length+1,\r\n            completed: false,\r\n          },\r\n        ];\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const storedTodos = JSON.parse(localStorage.getItem(Local_Storage_KEY));\r\n    if (storedTodos) setTodos(storedTodos);\r\n  }, []);\r\n  useEffect(() => {\r\n    localStorage.setItem(Local_Storage_KEY, JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const toggleTodo = (id) => {\r\n    const newTodo = [...todos];\r\n    const todo = newTodo.find((todo) => todo.id === id);\r\n    todo.completed = !todo.completed;\r\n    setTodos(newTodo);\r\n  };\r\n  const RemoveComplitedTodo = () => {\r\n    const newTodo = todos.filter((todo) => !todo.completed);\r\n    setTodos(newTodo);\r\n  };\r\n\r\n  const numberOfTodo = todos.filter((todo) => !todo.completed).length;\r\n  const variant = \"Dark\";\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n\r\n      <Main />\r\n      <br />\r\n      <Container fluid>\r\n        <Row>\r\n          <Col>\r\n            <input ref={todoNameRef} type=\"text\" />\r\n\r\n            <Button variant=\"secondary\" onClick={AddTodo}>\r\n              Add Todo\r\n            </Button>\r\n          </Col>\r\n\r\n          <Col>\r\n            <TodoList\r\n              todos={todos}\r\n              number={numberOfTodo}\r\n              toggleTodo={toggleTodo}\r\n            />\r\n\r\n            <Button variant=\"secondary\" onClick={RemoveComplitedTodo}>\r\n              Clear Completed\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Card\r\n              bg={variant.toLowerCase()}\r\n              //key={idx}\r\n              text={variant.toLowerCase() === \"light\" ? \"dark\" : \"white\"}\r\n              //style={{ width: '18rem' }}\r\n              //className=\"mb-2\"\r\n            >\r\n              <Card.Header className=\"Dark d-flex justify-content-center\">\r\n                Status of TodoList\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Card.Title>\r\n                  <h1>You have {numberOfTodo} this remining to do </h1>\r\n                </Card.Title>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Route, Switch, HashRouter as Router} from 'react-router-dom'\r\nimport App from './App';\r\nconst routing = (\r\n    <Router>\r\n \r\n        <Switch>\r\n            <Route exact path=\"/\" component ={App}/>\r\n            <Route path=\"/home\" component ={App}/>\r\n        </Switch>\r\n\r\n    </Router>\r\n)\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    // <NavBar />\r\n    // </React.StrictMode>,\r\n    routing,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// ReactDOM.render (<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}